<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>ControlGetStyle / ControlGetExStyle - 语法 &amp; 使用 | AutoHotkey v2</title>
<meta name="description" content="The ControlGetStyle and ControlGetExStyle functions return an integer representing the style or extended style of the specified control." />
<meta name="ahk:equiv-v1" content="lib/ControlGet.htm#Style" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>ControlGetStyle / ControlGetExStyle</h1>

<p>返回表示指定控件样式或扩展样式的整数.</p>

<pre class="Syntax">Style := <span class="func">ControlGetStyle</span>(Control <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span>)
ExStyle := <span class="func">ControlGetExStyle</span>(Control <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span>)</pre>

<h2 id="Parameters">参数</h2>
<dl>
    <dt>Control</dt>
    <dd>
        <p>类型: <a href="../Concepts.htm#strings">字符串</a>, <a href="../Concepts.htm#numbers">整数</a>或<a href="../Concepts.htm#objects">对象</a></p>
        <p>控件的 ClassNN, 文本或 HWND, 或具有 <code class="no-highlight">Hwnd</code> 属性的对象. 有关详情, 请参阅 <a href="Control.htm#Parameter">Control 参数</a>.</p>
    </dd>
    <dt>WinTitle, WinText, ExcludeTitle, ExcludeText</dt>
    <dd>
        <p>类型: <a href="../Concepts.htm#strings">字符串</a>, <a href="../Concepts.htm#numbers">整数</a>或<a href="../Concepts.htm#objects">对象</a></p>
    <p>如果这些都是空白或省略, 将使用<a href="../misc/WinTitle.htm#LastFoundWindow">上次找到的窗口</a>. 否则, 为 <em>WinTitle</em> 指定<a href="../misc/WinTitle.htm">窗口标题或其他条件</a>, 来标识目标窗口, 和/或为 <em>WinText</em> 指定目标窗口的单个文本元素的子字符串(由包含的 Window Spy 实用程序显示).</p>
    <p><em>ExcludeTitle</em> 和 <em>ExcludeText</em> 可用于根据标题或文本排除一个或多个窗口. 它们的规范类似于 <em>WinTitle</em> 和 <em>WinText</em>, 除了 <em>ExcludeTitle</em> 不识别除窗口标题之外的任何条件.</p>
    <p>窗口标题和文本是区分大小写的. 默认情况下, 不检测隐藏窗口, 而检测隐藏文本元素, 除非使用 <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> 和 <a href="DetectHiddenText.htm">DetectHiddenText</a> 进行更改; 但是, 当使用<a href="../misc/WinTitle.htm#ahk_id">纯 HWND</a> 时, 无论 DetectHiddenWindows 怎样设置, 都会检测隐藏窗口. 默认情况下, 窗口标题的任意位置包含 <em>WinTitle</em> 或 <em>ExcludeTitle</em> 就能形成匹配, 除非使用 <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> 进行了更改.</p>
    </dd>
</dl>

<h2 id="Return_Value">返回值</h2>
<p>类型: <a href="../Concepts.htm#numbers">整数</a></p>
<p>这些函数返回指定控件样式或扩展样式.</p>

<h2 id="Error_Handling">错误处理</h2>
<p>失败时, 或者找不到窗口或控件, 则抛出 <a href="Error.htm#TargetError">TargetError</a>.</p>

<h2 id="Remarks">备注</h2>
<p>有关样式的部分列表, 请参阅<a href="../misc/Styles.htm">样式列表</a>.</p>
<p>ControlGetExStyle 只检索一般的扩展样式, 如 WS_EX_CLIENTEDGE(0x200). 要检索控件特定的扩展样式, 请使用 <a href="SendMessage.htm">SendMessage</a>, 例如 <code>SendMessage(0x1037, 0, 0, <i>MyListView</i>)</code> 其中 0x1037 为 <a href="https://learn.microsoft.com/windows/win32/controls/lvm-getextendedlistviewstyle">LVM_GETEXTENDEDLISTVIEWSTYLE</a>. 对于通过 AutoHotkey 创建的 <a href="ListView.htm">ListView</a>, 这个例子返回 48(0x30), <a href="../misc/Styles.htm#LVS_EX_FULLROWSELECT">LVS_EX_FULLROWSELECT</a>(0x20) 和 <a href="../misc/Styles.htm#LVS_EX_HEADERDRAGDROP">LVS_EX_HEADERDRAGDROP</a>(0x10) 的组合, 前提是扩展的 ListView 样式没有事先改变.</p>

<h2 id="Related">相关</h2>
<p><a href="ControlSetStyle.htm">ControlSetStyle / ControlSetExStyle</a>, <a href="WinGetStyle.htm">WinGetStyle / WinGetExStyle</a>, <a href="../misc/Styles.htm">样式列表</a>, <a href="Control.htm">控件函数</a></p>

</body>
</html>